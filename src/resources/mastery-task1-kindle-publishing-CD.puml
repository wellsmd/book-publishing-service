@startuml

class GetBookActivity {
    -recommendationsServiceClient: RecommendationsServiceClient
    -catalogDao: CatalogDao
    +execute(GetBookRequest) : GetBookResponse
}

class GetPublishingStatusActivity {
    +execute(GetPublishingStatusRequest) : GetPublishingStatusResponse
}

class RemoveBookFromCatalogActivity {
    +execute(RemoveBookFromCatalogRequest) : RemoveBookFromCatalogResponse
}

class SubmitBookForPublishingActivity {
    -publishingStatusDao: PublishingStatusDao
    +execute(SubmitBookForPublishingRequest) : SubmitBookForPublishingResponse
}

class RecommendationsServiceClient {
    -recommendationsService: RecommendationsService
    +getBookRecommendations(BookGenre) : List<BookRecommendation>
}

class CatalogDao {
    -dynamoDBMapper: DynamoDBMapper
    +getBookFromCatalog(String) : CatalogItemVersion
    +getLatestVersionOfBook(String) : CatalogItemVersion
}

class PublishingStatusDao {
    -dynamoDBMapper: DynamoDBMapper
    +setPublishingStatus(String, PublishingRecordStatus, String) : PublishingStatusItem
    +setPublishingStatus(String, PublishingRecordStatus, String, String) : PublishingStatusItem
}

class CatalogItemVersion {
    -@DynamoDBHashKey bookId: String
    -@DynamoDBRangeKey version: int
    -inactive: boolean
    -title: String
    -author: String
    -text: String
    -genre: BookGenre
    +getBookId() : String
    +getVersion() : int
    +getTitle() : String
    +getAuthor() : String
    +getText() : String
    +getGenre() : BookGenre
    +isInactive() : boolean
}

class PublishingStatusItem {
    -@DynamoDBHashKey publishingRecordId: String
    -@DynamoDBRangeKey status: PublishingRecordStatus
    -statusMessage: String
    -bookId: String
    +getPublishingRecordId() : String
    +getStatus() : PublishingRecordStatus
    +getStatusMessage() : String
    +getBookId() : String
}

class BookNotFoundException {
    +BookNotFoundException(String)
}

class PublishingStatusNotFoundException {
    +PublishingStatusNotFoundException(String)
}

GetBookActivity o-- RecommendationsServiceClient
GetBookActivity o-- CatalogDao
CatalogDao o-- CatalogItemVersion
PublishingStatusDao o-- PublishingStatusItem
SubmitBookForPublishingActivity o-- PublishingStatusDao
CatalogDao o-- BookNotFoundException

@enduml
